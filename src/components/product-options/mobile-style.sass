.modal
  position: absolute
  width: 100%
  left: 0
  height: 90%
  bottom: 0
  border-radius: 7px 7px 0 0
  overflow: hidden
  pointer-events: all
  background: $actually-white
  display: flex
  flex-direction: column
  will-change: auto

  @media screen and (max-height: 400px), screen and (max-height: 500px) and (max-aspect-ratio: 380 / 450)
    height: 100%


.left // (actually top in mobile layout)
  flex-grow: 1
  position: relative
  background: $white

  .image-carousel
    position: absolute
    top: 0
    bottom: 0
    left: 0
    right: 0
    margin: 7% 0 9%


.right // (actually bottom in mobile layout)
  flex-grow: 0

  h1
    position: relative
    font-size: calc(1.3rem + .5vh)
    text-align: left
    line-height: 1.2em
    margin: 5% 4vh .2rem

  .bottom-bar
    margin: 3vh 4vh 4.5vh
    height: 2.25rem
    font-size: .8rem

  .pages
    display: flex
    width: 200vw
    transition: transform .5s

    .page
      width: 100vw

    // First page contains title and description

    .page-1
      padding: 0 4vh
      font-size: calc(.7rem + 1vh)

    // Second page contains color and size selection

    .page-2
      padding: 1% 7.5% 0
      display: flex
      flex-direction: column
      align-items: center
      justify-content: space-around
      max-height: 6.5rem

      .colors
        font-size: 2.25rem
        margin-bottom: 4%

      .sizes
        width: 100%
        font-size: 1.35rem

// https://vue-loader.vuejs.org/guide/scoped-css.html#dynamically-generated-content

.modal /deep/ .line
  position: relative
  display: inline-block
  transition: left .35s, transform .35s

[data-page='1']
  & /deep/ .line
    left: 0

[data-page='2']
  & /deep/ .line
    left: 50%
    transform: translate(-50%)

  .pages
    transform: translate(-100vw)


.touch-handle
  position: absolute
  z-index: 1
  margin-top: 3.5%
  left: 50%
  transform: translate(-50%, -50%)
  width: 56px
  height: 6px
  border-radius: 4px
  background: $touch-handle-color


.slide-from-bottom
  &-enter-active,
  &-leave-active
    &.wrapper // transition is applied directly to the wrapper element
      transition: opacity .35s

  &-enter,
  &-leave-to
    &.wrapper
      opacity: 0
